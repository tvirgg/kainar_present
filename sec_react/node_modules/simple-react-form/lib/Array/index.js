'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FieldType = require('../FieldType');

var _isArray = require('lodash/isArray');

var _isArray2 = _interopRequireDefault(_isArray);

var _without = require('lodash/without');

var _without2 = _interopRequireDefault(_without);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Object = require('../Object');

var _Object2 = _interopRequireDefault(_Object);

var _Field = require('../Field');

var _Field2 = _interopRequireDefault(_Field);

var _Contexts = require('../Contexts');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * You can use this field as array field but the main purporse is to extend it
 * and create your own (like the material-ui fields do)
 */

var propTypes = (0, _extends3.default)({}, _FieldType.propTypes, {
  /**
   * The add button label
   */
  addLabel: _propTypes2.default.string,

  /**
   * Show the add button
   */
  showAddButton: _propTypes2.default.bool,

  /**
   * Show the remove button
   */
  showRemoveButton: _propTypes2.default.bool,

  /**
   * The remove label
   */
  removeLabel: _propTypes2.default.string,

  /**
   *
   */
  autoAddItem: _propTypes2.default.bool,

  /**
   * The label for the field
   */
  label: _propTypes2.default.string,

  /**
   * Each item component
   */
  children: _propTypes2.default.any,

  /**
   * Pass a function that returns the children components for the current item.
   * The inputs of the function will be value and index.
   * This is useful when you want to change the view of a item in the array depending
   * on the current value.
   */
  renderItem: _propTypes2.default.func
});

var defaultProps = {
  addLabel: 'Add',
  removeLabel: 'Remove',
  showLabel: true,
  errorMessages: {},
  autoAddItem: false,
  showAddButton: true,
  showRemoveButton: true
};

var ArrayComponent = function (_React$Component) {
  (0, _inherits3.default)(ArrayComponent, _React$Component);

  function ArrayComponent() {
    (0, _classCallCheck3.default)(this, ArrayComponent);
    return (0, _possibleConstructorReturn3.default)(this, (ArrayComponent.__proto__ || Object.getPrototypeOf(ArrayComponent)).apply(this, arguments));
  }

  (0, _createClass3.default)(ArrayComponent, [{
    key: 'addItem',
    value: function addItem() {
      var itemValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var newArray = this.props.value;
      if ((0, _isArray2.default)(newArray)) {
        newArray.push(itemValue);
      } else {
        newArray = [itemValue];
      }

      this.props.onChange(newArray);
    }
  }, {
    key: 'getObjectField',
    value: function getObjectField() {
      return _Object2.default;
    }
  }, {
    key: 'removeItem',
    value: function removeItem(index) {
      var value = this.props.value || [];
      var newArray = (0, _without2.default)(value, value[index]);
      this.props.onChange(newArray);
    }
  }, {
    key: 'getChildrenComponents',
    value: function getChildrenComponents(item, index) {
      if (this.props.renderItem) return this.props.renderItem(item, index);
      if (this.props.children) return this.props.children;
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren() {
      var _this2 = this;

      var value = this.props.value || [];
      if (this.props.autoAddItem && !this.props.disabled && value.length === 0) {
        value.push({});
      }
      return value.map(function (item, index) {
        var children = _this2.getChildrenComponents(item, index);
        return _this2.renderChildrenItem({ index: index, children: children });
      });
    }
  }, {
    key: 'renderChildrenItem',
    value: function renderChildrenItem(_ref) {
      var _this3 = this;

      var index = _ref.index,
          children = _ref.children;

      var button = this.props.showRemoveButton ? this.renderButton(function () {
        return _this3.removeItem(index);
      }, this.props.removeLabel, 'srf_removeButton') : null;
      return _react2.default.createElement(
        'div',
        {
          style: { marginTop: 20, marginBottom: 20, padding: 20 },
          key: this.props.fieldName + '.' + index },
        this.renderChildrenItemWithContext({ index: index, children: children }),
        button
      );
    }
  }, {
    key: 'renderChildrenItemWithContext',
    value: function renderChildrenItemWithContext(_ref2) {
      var index = _ref2.index,
          children = _ref2.children;

      return _react2.default.createElement(
        _Contexts.ParentFieldNameContext.Provider,
        { key: index, value: this.props.fieldName },
        _react2.default.createElement(
          _Field2.default,
          { fieldName: '' + index, type: this.getObjectField() },
          children
        )
      );
    }
  }, {
    key: 'renderButton',
    value: function renderButton(onClick, label, className) {
      return _react2.default.createElement(
        'div',
        { style: { marginTop: 10 } },
        _react2.default.createElement(
          'button',
          { type: 'button', className: className, onClick: onClick },
          label
        )
      );
    }
  }, {
    key: 'renderErrorMessage',
    value: function renderErrorMessage() {
      if (!this.props.errorMessage) return;
      return _react2.default.createElement(
        'div',
        { style: { color: 'red' }, className: 'srf_errorMessage' },
        this.props.errorMessage
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      return _react2.default.createElement(
        'div',
        { style: { marginTop: 20 } },
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'b',
            null,
            this.props.label
          )
        ),
        this.renderErrorMessage(),
        this.renderChildren(),
        this.props.showAddButton ? this.renderButton(function () {
          return _this4.addItem();
        }, this.props.addLabel, 'srf_addButton') : null
      );
    }
  }]);
  return ArrayComponent;
}(_react2.default.Component);

exports.default = ArrayComponent;


ArrayComponent.propTypes = propTypes;
ArrayComponent.defaultProps = defaultProps;