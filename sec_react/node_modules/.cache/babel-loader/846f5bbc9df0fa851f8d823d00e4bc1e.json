{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\first_react\\\\tvirgg.github.io\\\\sec_react\\\\src\\\\components\\\\users\\\\Paginator.jsx\";\nimport classes from \"./Users.module.css\";\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\n\nconst Pagination = ({\n  totalItemsCount,\n  pageSize,\n  curentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  //get props\n  let pagesCount = Math.ceil(totalItemsCount / pageSize); //init new variable\n\n  let pages = [];\n\n  for (let i = 1; i <= totalItemsCount; i++) {\n    pages.push(i); //filling our array, which exist quantity elements in Paginator\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize); //number of portion from server\n\n  let [portionNumber, setPortionNumber] = useState(1); //variable for number of  ten\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1; // left border\n\n  let rightPortionPageNumber = portionNumber * portionSize; //right border\n\n  const classwork = (p, curentPage) => {\n    if (p === curentPage) {\n      return classes.selectedPage;\n    } else {\n      return classes.pageNumber;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classwork(p, curentPage),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/first_react/tvirgg.github.io/sec_react/src/components/users/Paginator.jsx"],"names":["classes","React","useState","cn","Pagination","totalItemsCount","pageSize","curentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","classwork","p","selectedPage","pageNumber","paginator","filter","map","e"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,UAA5B;AAAwCC,EAAAA,aAAxC;AAAuDC,EAAAA,WAAW,GAAG;AAArE,CAAD,KAA6E;AAAE;AAC9F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB,CAD4F,CACrC;;AACvD,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,eAArB,EAAsCS,CAAC,EAAvC,EAA2C;AACvCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX,EADuC,CACzB;AACjB;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB,CAN4F,CAMrC;;AACvD,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD,CAP4F,CAOxC;;AACpD,MAAIiB,qBAAqB,GAAI,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAvB,GAAsC,CAAlE,CAR4F,CAQvB;;AACrE,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C,CAT4F,CASnC;;AACzD,QAAMY,SAAS,GAAG,CAACC,CAAD,EAAIf,UAAJ,KAAkB;AAChC,QAAGe,CAAC,KAAKf,UAAT,EAAoB;AAChB,aAAOP,OAAO,CAACuB,YAAf;AACH,KAFD,MAGK;AACD,aAAOvB,OAAO,CAACwB,UAAf;AACH;AACJ,GAPD;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAExB,OAAO,CAACyB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDR,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFJ,KAAK,CAACa,MAAN,CAAaJ,CAAC,IAAIA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAEF,sBAAnD,EACIO,GADJ,CACSL,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAED,SAAS,CAACC,CAAD,EAAIf,UAAJ,CAA1B;AACM,MAAA,GAAG,EAAEe,CADX;AAEM,MAAA,OAAO,EAAGM,CAAD,IAAO;AACZpB,QAAAA,aAAa,CAACc,CAAD,CAAb;AACH,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIUA,CAJV,CAAP;AAKH,GAPJ,CAJE,EAYFN,YAAY,GAAGC,aAAf,iBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbG,CAAP;AAeH,CAjCD;;AAkCA,eAAeb,UAAf","sourcesContent":["import classes from \"./Users.module.css\";\nimport React, {useState} from \"react\";\nimport cn from \"classnames\";\nconst Pagination = ({totalItemsCount, pageSize, curentPage, onPageChanged, portionSize = 10}) =>{ //get props\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);//init new variable\n    let pages = [];\n    for (let i = 1; i <= totalItemsCount; i++) {\n        pages.push(i);//filling our array, which exist quantity elements in Paginator\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize);//number of portion from server\n    let [portionNumber, setPortionNumber] = useState(1);//variable for number of  ten\n    let leftPortionPageNumber = ((portionNumber - 1) * portionSize) + 1; // left border\n    let rightPortionPageNumber = portionNumber * portionSize;//right border\n    const classwork = (p, curentPage) =>{\n        if(p === curentPage){\n            return classes.selectedPage;\n        }\n        else {\n            return classes.pageNumber;\n        }\n    }\n    return <div className={classes.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={classwork(p, curentPage)}\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        {portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n    </div>\n}\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}