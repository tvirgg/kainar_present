{"ast":null,"code":"import { setrequire } from \"./Auth_reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => async dispatch => {\n  let promise = dispatch(setrequire());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/first_react/tvirgg.github.io/sec_react/src/redux/state/app-reducer.js"],"names":["setrequire","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB;AAGA,MAAMC,mBAAmB,GAAG,qBAA5B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAcA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAIC,OAAO,GAAGD,QAAQ,CAACV,UAAU,EAAX,CAAtB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CANM;AASP,eAAeJ,UAAf","sourcesContent":["import {setrequire} from \"./Auth_reducer\";\n\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => async (dispatch) => {\n    let promise = dispatch(setrequire());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}