{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-way-of-samurai-c15355c9b9752fa07cc4cd950505c393fb3acf47\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, unfollow, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    console.log(\"USERS\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}*/\n\n\nlet mapStateToProps = state => {\n  console.log('mapStateToProps USERS');\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/react-way-of-samurai-c15355c9b9752fa07cc4cd950505c393fb3acf47/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","unfollow","toggleFollowingProgress","requestUsers","Users","Preloader","withAuthRedirect","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","console","log","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAGcC,uBAHd,EAGuCC,YAHvC,QAIO,2BAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,EAKwBC,QALxB,QAMO,6BANP;;AAUA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWL,QAAX,CAAoBI,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACH,KAPwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWL,QAAX,CAAoB,KAAKK,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,wBAAO,0CACD,KAAKN,KAAL,CAAWO,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADvC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ,eAAnC;AACY,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QADjC;AAEY,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAFpC;AAGY,MAAA,aAAa,EAAE,KAAKL,aAHhC;AAIY,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWS,KAJ9B;AAKY,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWnB,MAL/B;AAMY,MAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWjB,QANjC;AAOY,MAAA,mBAAmB,EAAE,KAAKiB,KAAL,CAAWU,mBAP5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AAvBwC;AA0B7C;;;;;;;;;;;;AAUA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC9BP,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACC,SAAO;AACHG,IAAAA,KAAK,EAAEd,QAAQ,CAACiB,KAAD,CADZ;AAEHX,IAAAA,QAAQ,EAAER,WAAW,CAACmB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAHhC;AAIHT,IAAAA,WAAW,EAAEb,cAAc,CAACsB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEf,aAAa,CAACoB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEnB,sBAAsB,CAACqB,KAAD;AANxC,GAAP;AAQH,CAVD;;AAaA,eAAevB,OAAO,CAClBT,OAAO,CAAC+B,eAAD,EAAiB;AAAC9B,EAAAA,MAAD;AAASE,EAAAA,QAAT;AAAmBD,EAAAA,cAAnB;AAAmCE,EAAAA,uBAAnC;AAA4DW,EAAAA,QAAQ,EAAEV;AAAtE,CAAjB,CADW,CAAP,CAEbW,cAFa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    }\n\n    render() {\n        console.log(\"USERS\");\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={this.props.totalUsersCount}\n                        pageSize={this.props.pageSize}\n                        currentPage={this.props.currentPage}\n                        onPageChanged={this.onPageChanged}\n                        users={this.props.users}\n                        follow={this.props.follow}\n                        unfollow={this.props.unfollow}\n                        followingInProgress={this.props.followingInProgress}\n             />\n        </>\n    }\n}\n\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}*/\nlet mapStateToProps = (state) => {\n   console.log('mapStateToProps USERS')\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\n)(UsersContainer)"]},"metadata":{},"sourceType":"module"}