{"ast":null,"code":"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Coment from './coment';\nimport { connect } from \"react-redux\";\nimport { SendMessagecreator } from '../../redux/state/DialogsData_reducer';\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet DispatchToProps = dispatch => {\n  return {\n    SendMessage: text => {\n      dispatch(SendMessagecreator(text));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    DialogsData: state.DialogsData\n  };\n};\n\nexport default compose(connect(mapStateToProps, DispatchToProps), withAuthRedirect)(Coment);","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/components/comment/comentcontainer.jsx"],"names":["React","Coment","connect","SendMessagecreator","Redirect","withRouter","withAuthRedirect","compose","DispatchToProps","dispatch","SendMessage","text","mapStateToProps","state","DialogsData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,uCAAjC;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,kBAAnC;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAIA,IAAIC,eAAe,GAAIC,QAAD,IAAa;AAC/B,SAAM;AACFC,IAAAA,WAAW,EAAGC,IAAD,IAAS;AAClBF,MAAAA,QAAQ,CAACN,kBAAkB,CAACQ,IAAD,CAAnB,CAAR;AACH;AAHC,GAAN;AAKH,CAND;;AAOA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAKA,eAAeP,OAAO,CAClBL,OAAO,CAACU,eAAD,EAAkBJ,eAAlB,CADW,EAEtBF,gBAFsB,CAAP,CAGbL,MAHa,CAAf","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Coment from './coment';\nimport {connect} from \"react-redux\";\nimport {SendMessagecreator} from '../../redux/state/DialogsData_reducer';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\nlet DispatchToProps = (dispatch) =>{\n    return{\n        SendMessage: (text) =>{\n            dispatch(SendMessagecreator(text));\n        }\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        DialogsData: state.DialogsData\n    }\n}\nexport default compose(\n    connect(mapStateToProps, DispatchToProps),\nwithAuthRedirect\n)(Coment);\n\n"]},"metadata":{},"sourceType":"module"}