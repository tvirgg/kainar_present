{"ast":null,"code":"import { getUsers, UserAPI } from \"../../components/users/Api\";\nimport { updateObjectInArray } from \"../../utils/object-helpers\";\nlet initialstate = {\n  users: [],\n  pageSize: 4,\n  totalUsersCount: 0,\n  curentPage: 1,\n  isFetcing: true,\n  followingInProgress: []\n};\nexport const r = a => {\n  console.log(a);\n};\n\nconst UsersReducer = (state = initialstate, action) => {\n  if (action.type === 'follow') {\n    return { ...state,\n      users: updateObjectInArray(state.users, action.userId, \"id\", {\n        followed: true\n      })\n    };\n  } else if (action.type === 'unfollow') {\n    return { ...state,\n      users: updateObjectInArray(state.users, action.userId, \"id\", {\n        followed: false\n      })\n    };\n  } else if (action.type === 'following_InProgress') {\n    return { ...state,\n      followingInProgress: action.isFetcing ? [...state.followingInProgress, action.userID] : state.followingInProgress.filter(id => id != action.userID)\n    };\n  } else if (action.type === 'set_user') {\n    return { ...state,\n      users: action.users\n    };\n  } else if (action.type === 'set_TotalCount') {\n    return { ...state,\n      totalUsersCount: action.totalCount\n    };\n  } else if (action.type === 'set_curentPage') {\n    return { ...state,\n      curentPage: action.curentPage\n    };\n  } else if (action.type === 'togle_fetch') {\n    return { ...state,\n      isFetcing: action.isFetcing\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const fallowSEC = userID => {\n  return {\n    type: 'follow',\n    userID\n  };\n};\nexport const unfallowSEC = userID => {\n  return {\n    type: 'unfollow',\n    userID\n  };\n};\nexport const toggleisFetcing = isFetcing => ({\n  type: 'togle_fetch',\n  isFetcing\n});\nexport const setuser = users => ({\n  type: 'set_user',\n  users\n});\nexport const togglefollowingInProgress = (isFetcing, userID) => ({\n  type: 'following_InProgress',\n  isFetcing,\n  userID\n});\nexport const SetCurrentPage = p => ({\n  type: 'set_curentPage',\n  curentPage: p\n});\nexport const setTotalCount = TotalCount => ({\n  type: 'set_TotalCount',\n  totalCount: TotalCount\n});\nexport const getUsersC = (curentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleisFetcing(true));\n    UserAPI.getUsers(curentPage, pageSize).then(data => {\n      dispatch(toggleisFetcing(false));\n      dispatch(SetCurrentPage(curentPage));\n      dispatch(setuser(data.items));\n      dispatch(setTotalCount(data.totalCount));\n    });\n  };\n};\nexport const unfallow = UId => {\n  return dispatch => {\n    dispatch(togglefollowingInProgress(true, UId));\n    UserAPI.Unfollow(UId).then(response => {\n      if (response.data === false) {\n        unfallowSEC(UId);\n      }\n\n      dispatch(togglefollowingInProgress(false, UId));\n    });\n  };\n};\nexport const fallow = UId => {\n  return dispatch => {\n    dispatch(togglefollowingInProgress(true, UId));\n    UserAPI.Follow(UId).then(response => {\n      if (response.data === true) {\n        fallowSEC(UId);\n      }\n\n      dispatch(togglefollowingInProgress(false, UId));\n    });\n  };\n};\nexport default UsersReducer;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/redux/state/Users-reducer.js"],"names":["getUsers","UserAPI","updateObjectInArray","initialstate","users","pageSize","totalUsersCount","curentPage","isFetcing","followingInProgress","r","a","console","log","UsersReducer","state","action","type","userId","followed","userID","filter","id","totalCount","fallowSEC","unfallowSEC","toggleisFetcing","setuser","togglefollowingInProgress","SetCurrentPage","p","setTotalCount","TotalCount","getUsersC","dispatch","then","data","items","unfallow","UId","Unfollow","response","fallow","Follow"],"mappings":"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","sourcesContent":["import {getUsers, UserAPI} from \"../../components/users/Api\";\nimport {updateObjectInArray} from \"../../utils/object-helpers\";\n\nlet initialstate = {\n    users: [],\n    pageSize: 4,\n    totalUsersCount: 0,\n    curentPage: 1,\n    isFetcing: true,\n    followingInProgress: []\n};\nexport const r = (a) =>{\n    console.log(a);\n}\nconst UsersReducer = (state = initialstate, action) => {\n    if (action.type === 'follow') {\n        return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n        }\n    } else if (action.type === 'unfollow') {\n        return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n        }\n    }else if (action.type === 'following_InProgress') {\n    return {\n        ...state,\n        followingInProgress: action.isFetcing\n            ? [...state.followingInProgress, action.userID]\n            : state.followingInProgress.filter(id => id != action.userID)}\n    }else if (action.type === 'set_user') {\n        return {\n            ...state, users: action.users }\n    } else if (action.type === 'set_TotalCount') {\n        return {...state, totalUsersCount: action.totalCount}\n    }else if (action.type === 'set_curentPage') {\n        return {...state, curentPage: action.curentPage}\n    }else if (action.type === 'togle_fetch') {\n        return {...state, isFetcing : action.isFetcing}\n    }else {\n        return state;\n    }\n};\nexport const fallowSEC = (userID) => {\n    return {\n        type: 'follow',\n        userID\n    }\n};\n\nexport const unfallowSEC = (userID) => {\n    return {\n        type: 'unfollow',\n        userID\n    }\n};\nexport const toggleisFetcing = (isFetcing) => ({type: 'togle_fetch', isFetcing });\nexport const setuser = (users) => ({type: 'set_user', users});\nexport const togglefollowingInProgress = (isFetcing, userID) => ({type: 'following_InProgress', isFetcing, userID});\nexport const SetCurrentPage = (p) =>({type: 'set_curentPage', curentPage: p});\nexport const setTotalCount = (TotalCount) =>({type: 'set_TotalCount', totalCount: TotalCount});\n\nexport const getUsersC = (curentPage, pageSize) => {\n    return (dispatch) => {\n    dispatch(toggleisFetcing(true));\n        UserAPI.getUsers(curentPage, pageSize).then(data => {\n        dispatch(toggleisFetcing(false));\n        dispatch(SetCurrentPage(curentPage));\n        dispatch(setuser(data.items));\n        dispatch(setTotalCount(data.totalCount));\n})};\n};\n\nexport const unfallow = (UId) => {\n    return (dispatch) => {\n        dispatch(togglefollowingInProgress(true, UId));\n        UserAPI.Unfollow(UId)\n            .then(response => {\n                if (response.data === false){\n                    unfallowSEC(UId);\n                }\n                dispatch(togglefollowingInProgress(false, UId));\n            });\n        };\n};\nexport const fallow = (UId) => {\n    return (dispatch) => {\n        dispatch(togglefollowingInProgress(true, UId));\n        UserAPI.Follow(UId)\n            .then(response => {\n                if (response.data === true){\n                    fallowSEC(UId);\n                }\n                dispatch(togglefollowingInProgress(false, UId));\n            });\n    };\n};\n\n\n\n\nexport default UsersReducer;\n"]},"metadata":{},"sourceType":"module"}