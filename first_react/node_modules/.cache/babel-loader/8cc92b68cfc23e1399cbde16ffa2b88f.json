{"ast":null,"code":"import { UserAPI as ProfileAPI, UserAPI as API } from \"../../components/users/Api\";\nlet initialstate = {\n  Posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  newPostText: '',\n  profile: null,\n  status: ''\n};\n\nconst PostsDataReducer = (state = initialstate, action) => {\n  if (action.type === 'UpdatePost') {\n    return { ...state,\n      newPostText: action.Newtext\n    };\n  } else if (action.type === 'AddPost') {\n    let newPost = {\n      id: 5,\n      message: state.newPostText,\n      likesCount: 0\n    };\n    return { ...state,\n      Posts: [...state.Posts, newPost],\n      newPostText: ' '\n    };\n  } else if (action.type === 'setProfile') {\n    return { ...state,\n      profile: action.profile\n    };\n  } else if (action.type === 'Get_status') {\n    return { ...state,\n      status: action.status\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const setProfilePage = userId => dispatch => {\n  API.getProfile(userId).then(response => {\n    dispatch(setProfile(response.data));\n  });\n};\nexport const getStatus = status => {\n  return {\n    type: 'Get_status',\n    status: status\n  };\n  debugger;\n};\nexport const setStatus = userId => dispatch => {\n  ProfileAPI.getStatus(userId).then(response => {\n    dispatch(getStatus(response.data));\n  });\n};\nexport const addPostcreator = text => {\n  return {\n    type: 'AddPost',\n    postMassage: text\n  };\n};\nexport const setProfile = profile => ({\n  type: 'setProfile',\n  profile\n});\nexport const OnPostchangecreator = text => {\n  return {\n    type: 'UpdatePost',\n    Newtext: text\n  };\n};\nexport default PostsDataReducer;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/redux/state/PostsData-reducer.js"],"names":["UserAPI","ProfileAPI","API","initialstate","Posts","id","message","likesCount","newPostText","profile","status","PostsDataReducer","state","action","type","Newtext","newPost","setProfilePage","userId","dispatch","getProfile","then","response","setProfile","data","getStatus","setStatus","addPostcreator","text","postMassage","OnPostchangecreator"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,UAAnB,EAA+BD,OAAO,IAAIE,GAA1C,QAAoD,4BAApD;AAGA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,kBAAjB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,qBAAjB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAFG,EAGH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,QAAjB;AAA2BC,IAAAA,UAAU,EAAE;AAAvC,GAHG,EAIH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,MAAjB;AAAyBC,IAAAA,UAAU,EAAE;AAArC,GAJG,CADU;AAOjBC,EAAAA,WAAW,EAAG,EAPG;AAQjBC,EAAAA,OAAO,EAAE,IARQ;AASfC,EAAAA,MAAM,EAAE;AATO,CAAnB;;AAWA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAiC;AAEtD,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAC/B,WAAM,EACJ,GAAGF,KADC;AACMJ,MAAAA,WAAW,EAAGK,MAAM,CAACE;AAD3B,KAAN;AAGC,GAJH,MAQO,IAAIF,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA8B;AACjC,QAAIE,OAAO,GAAG;AACZX,MAAAA,EAAE,EAAE,CADQ;AAEZC,MAAAA,OAAO,EAAEM,KAAK,CAACJ,WAFH;AAGZD,MAAAA,UAAU,EAAE;AAHA,KAAd;AAMA,WAAM,EACJ,GAAGK,KADC;AAEJR,MAAAA,KAAK,EAAE,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBY,OAAjB,CAFH;AAGJR,MAAAA,WAAW,EAAG;AAHV,KAAN;AAKD,GAZI,MAaF,IAAIK,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AACpC,WAAM,EACJ,GAAGF,KADC;AAEJH,MAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFZ,KAAN;AAID,GALI,MAMA,IAAII,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAiC;AAClC,WAAM,EACF,GAAGF,KADD;AAEFF,MAAAA,MAAM,EAAEG,MAAM,CAACH;AAFb,KAAN;AAIH,GALI,MAME;AACH,WAAOE,KAAP;AACD;AACN,CAtCD;;AAuCA,OAAO,MAAMK,cAAc,GAAGC,MAAD,IAAYC,QAAD,IAAc;AAClDjB,EAAAA,GAAG,CAACkB,UAAJ,CAAeF,MAAf,EAAuBG,IAAvB,CAA4BC,QAAQ,IAAI;AAChCH,IAAAA,QAAQ,CAACI,UAAU,CAACD,QAAQ,CAACE,IAAV,CAAX,CAAR;AACH,GAFL;AAGH,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAIf,MAAD,IAAW;AAChC,SAAM;AACFI,IAAAA,IAAI,EAAE,YADJ;AACkBJ,IAAAA,MAAM,EAAEA;AAD1B,GAAN;AAGA;AACH,CALM;AAMP,OAAO,MAAMgB,SAAS,GAAGR,MAAD,IAAYC,QAAD,IAAc;AAC7ClB,EAAAA,UAAU,CAACwB,SAAX,CAAqBP,MAArB,EAA6BG,IAA7B,CAAkCC,QAAQ,IAAI;AAC1CH,IAAAA,QAAQ,CAACM,SAAS,CAACH,QAAQ,CAACE,IAAV,CAAV,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAS;AACrC,SAAM;AACFd,IAAAA,IAAI,EAAE,SADJ;AACee,IAAAA,WAAW,EAAED;AAD5B,GAAN;AAGD,CAJM;AAKP,OAAO,MAAML,UAAU,GAAGd,OAAD,KAAa;AAClCK,EAAAA,IAAI,EAAE,YAD4B;AACdL,EAAAA;AADc,CAAb,CAAlB;AAGP,OAAO,MAAMqB,mBAAmB,GAAIF,IAAD,IAAS;AAC1C,SAAM;AACFd,IAAAA,IAAI,EAAE,YADJ;AACkBC,IAAAA,OAAO,EAAEa;AAD3B,GAAN;AAGD,CAJM;AAKP,eAAejB,gBAAf","sourcesContent":["import {UserAPI as ProfileAPI, UserAPI as API} from \"../../components/users/Api\";\n\n\nlet initialstate = {\n  Posts: [\n      {id: 1, message: 'Hi, how are you?', likesCount: 12},\n      {id: 2, message: 'It\\'s my first post', likesCount: 11},\n      {id: 3, message: 'Blabla', likesCount: 11},\n      {id: 4, message: 'Dada', likesCount: 11} \n    ],\n  newPostText : '',\n  profile: null,\n    status: ''\n}\nconst PostsDataReducer = (state = initialstate, action) =>{\n  \n    if (action.type === 'UpdatePost'){\n      return{\n        ...state, newPostText : action.Newtext\n      }\n      }\n\n\n\n      else if (action.type === 'AddPost'){\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          likesCount: 0\n        };\n\n        return{\n          ...state,\n          Posts: [...state.Posts, newPost],\n          newPostText : ' '\n        };\n      }\n    else if (action.type === 'setProfile'){\n      return{\n        ...state,\n        profile: action.profile\n      }\n    }\n    else if (action.type === 'Get_status'){\n        return{\n            ...state,\n            status: action.status\n        }\n    }\n      else {\n        return state;\n      }\n}\nexport const setProfilePage =(userId)=> (dispatch) => {\n    API.getProfile(userId).then(response => {\n            dispatch(setProfile(response.data));\n        });\n}\n\nexport const getStatus = (status) =>{\n    return{\n        type: 'Get_status', status: status,\n    }\n    debugger;\n}\nexport const setStatus =(userId)=> (dispatch) => {\n    ProfileAPI.getStatus(userId).then(response => {\n        dispatch(getStatus(response.data));\n    });\n}\n\nexport const addPostcreator = (text) =>{\n  return{\n      type: 'AddPost', postMassage: text\n  }\n}\nexport const setProfile= (profile) =>({\n    type: 'setProfile', profile})\n\nexport const OnPostchangecreator = (text) =>{\n  return{\n      type: 'UpdatePost', Newtext: text\n  }\n}\nexport default PostsDataReducer;\n"]},"metadata":{},"sourceType":"module"}