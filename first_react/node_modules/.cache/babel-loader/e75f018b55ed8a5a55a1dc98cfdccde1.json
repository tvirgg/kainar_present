{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\my app\\\\src\\\\components\\\\users\\\\Paginator.jsx\";\nimport classes from \"./Users.module.css\";\nimport React, { useState } from \"react\";\n\nconst Pagination = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  //get props\n  let pagesCount = Math.ceil(totalItemsCount / pageSize); //init new variable\n\n  let pages = [];\n\n  for (let i = 1; i <= totalItemsCount; i++) {\n    pages.push(i); //filling our array, which exist quantity elements in Paginator\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize); //\n\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: ({\n        [classes.selectedPage]: currentPage === p\n      }, classes.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/components/users/Paginator.jsx"],"names":["classes","React","useState","Pagination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA8E;AAAE;AAC/F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB,CAD6F,CACtC;;AACvD,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,eAArB,EAAsCS,CAAC,EAAvC,EAA2C;AACvCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX,EADuC,CACzB;AACjB;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB,CAN6F,CAMtC;;AACvD,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AACA,sBAAO;AAAK,IAAA,SAAS,EAAER,OAAO,CAACoB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDJ,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFJ,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBAAnD,EACII,GADJ,CACSD,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,GAAG;AACrB,SAACtB,OAAO,CAACwB,YAAT,GAAwBlB,WAAW,KAAKgB;AADnB,SAEtBtB,OAAO,CAACyB,UAFW,CAAf;AAGM,MAAA,GAAG,EAAEH,CAHX;AAIM,MAAA,OAAO,EAAGI,CAAD,IAAO;AACZnB,QAAAA,aAAa,CAACe,CAAD,CAAb;AACH,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUA,CANV,CAAP;AAOH,GATJ,CAJE,EAcFP,YAAY,GAAGC,aAAf,iBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfG,CAAP;AAiBH,CA3BD;;AA4BA,eAAeb,UAAf","sourcesContent":["import classes from \"./Users.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) =>{ //get props\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);//init new variable\r\n    let pages = [];\r\n    for (let i = 1; i <= totalItemsCount; i++) {\r\n        pages.push(i);//filling our array, which exist quantity elements in Paginator\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);//\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return <div className={classes.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}