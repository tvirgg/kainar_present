{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\my app\\\\src\\\\components\\\\users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { togglefollowingInProgress, SetCurrentPage, getUsersC, fallow, unfallow } from '../../redux/state/Users-reducer';\nimport Users from './Users';\nimport Loader from './loader';\nimport { getUsers } from \"./Api.js\";\nimport { curentPageSelect, followingInProgresSelect, isFetcingSelect, pageSizeSelect, totalUsersCountSelect, userSelect } from \"./users-selectors\";\n\nclass UsersCont extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = p => {\n      this.props.getUsersC(p, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersC(this.props.curentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetcing ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      onPageChanged: this.onPageChanged,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      curentPage: this.props.curentPage,\n      unfallow: this.props.unfallow,\n      fallow: this.props.fallow,\n      users: this.props.users,\n      togglefollowingInProgress: this.props.togglefollowingInProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\n;\n\nlet mapStateToProps = state => {\n  return {\n    users: userSelect(state),\n    pageSize: pageSizeSelect(state),\n    totalUsersCount: totalUsersCountSelect(state),\n    curentPage: curentPageSelect(state),\n    isFetcing: isFetcingSelect(state),\n    followingInProgress: followingInProgresSelect(state)\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        fallow: (userID) => {\n            dispatch(fallowAC(userID));\n        },\n        unfallow: (userID) => {\n            dispatch(unfallowAC(userID));\n        },\n        setuser: (users) => {\n            dispatch(set_user(users));\n        },\n        setTotalCount:(TotalCount) =>{\n            dispatch(set_TotalCountAC(TotalCount));\n        },\n        SetCurrentPage: (p) =>{\n            dispatch(set_curentPageAC(p));\n        },\n        toggleisFetcing: (isFetcing) =>{\n            dispatch(setisFetcingAC(isFetcing));\n        }\n    }\n};*/\n\n\nexport default connect(mapStateToProps, {\n  fallow,\n  unfallow,\n  SetCurrentPage,\n  togglefollowingInProgress,\n  getUsersC\n})(UsersCont);","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/components/users/UsersContainer.jsx"],"names":["React","connect","togglefollowingInProgress","SetCurrentPage","getUsersC","fallow","unfallow","Users","Loader","getUsers","curentPageSelect","followingInProgresSelect","isFetcingSelect","pageSizeSelect","totalUsersCountSelect","userSelect","UsersCont","Component","onPageChanged","p","props","pageSize","componentDidMount","curentPage","render","isFetcing","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,yBADJ,EAEIC,cAFJ,EAGIC,SAHJ,EAGeC,MAHf,EAGuBC,QAHvB,QAIO,iCAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,QAAuB,UAAvB;AACA,SACIC,gBADJ,EAEIC,wBAFJ,EAGIC,eAHJ,EAIIC,cAJJ,EAKIC,qBALJ,EAMIC,UANJ,QAOO,mBAPP;;AAQA,MAAMC,SAAN,SAAwBhB,KAAK,CAACiB,SAA9B,CAAuC;AAAA;AAAA;;AAAA,SAInCC,aAJmC,GAIlBC,CAAD,IAAO;AACnB,WAAKC,KAAL,CAAWhB,SAAX,CAAqBe,CAArB,EAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACH,KANkC;AAAA;;AACnCC,EAAAA,iBAAiB,GAAE;AACf,SAAKF,KAAL,CAAWhB,SAAX,CAAqB,KAAKgB,KAAL,CAAWG,UAAhC,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAIDG,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKJ,KAAL,CAAWK,SAAX,gBAAuB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAmC,IADjC,eAEH,oBAAC,KAAD;AAAU,MAAA,aAAa,EAAE,KAAKP,aAA9B;AACU,MAAA,eAAe,EAAI,KAAKE,KAAL,CAAWM,eADxC;AAEU,MAAA,QAAQ,EAAG,KAAKN,KAAL,CAAWC,QAFhC;AAGU,MAAA,UAAU,EAAG,KAAKD,KAAL,CAAWG,UAHlC;AAIU,MAAA,QAAQ,EAAG,KAAKH,KAAL,CAAWd,QAJhC;AAKU,MAAA,MAAM,EAAI,KAAKc,KAAL,CAAWf,MAL/B;AAMU,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWO,KAN5B;AAOU,MAAA,yBAAyB,EAAE,KAAKP,KAAL,CAAWlB,yBAPhD;AAQU,MAAA,mBAAmB,EAAI,KAAKkB,KAAL,CAAWQ,mBAR5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAaH;;AArBkC;;AAsBtC;;AACD,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEZ,UAAU,CAACe,KAAD,CADd;AAEHT,IAAAA,QAAQ,EAAER,cAAc,CAACiB,KAAD,CAFrB;AAGHJ,IAAAA,eAAe,EAAEZ,qBAAqB,CAACgB,KAAD,CAHnC;AAIHP,IAAAA,UAAU,EAAEb,gBAAgB,CAACoB,KAAD,CAJzB;AAKHL,IAAAA,SAAS,EAACb,eAAe,CAACkB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEjB,wBAAwB,CAACmB,KAAD;AAN1C,GAAP;AASH,CAVD;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAe7B,OAAO,CAAC4B,eAAD,EAClB;AAACxB,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBH,EAAAA,cAAnB;AAAkCD,EAAAA,yBAAlC;AAA6DE,EAAAA;AAA7D,CADkB,CAAP,CAEZY,SAFY,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    togglefollowingInProgress,\n    SetCurrentPage,\n    getUsersC, fallow, unfallow\n} from '../../redux/state/Users-reducer';\nimport Users from './Users';\nimport Loader from './loader';\nimport {getUsers} from \"./Api.js\";\nimport {\n    curentPageSelect,\n    followingInProgresSelect,\n    isFetcingSelect,\n    pageSizeSelect,\n    totalUsersCountSelect,\n    userSelect\n} from \"./users-selectors\";\nclass UsersCont extends React.Component{\n    componentDidMount(){\n        this.props.getUsersC(this.props.curentPage, this.props.pageSize);\n    }\n    onPageChanged = (p) => {\n        this.props.getUsersC(p, this.props.pageSize);\n    }\n    render() {\n        return <>\n            {this.props.isFetcing ? <Loader/> : null}\n            <Users    onPageChanged={this.onPageChanged}\n                      totalUsersCount = {this.props.totalUsersCount}\n                      pageSize= {this.props.pageSize}\n                      curentPage={ this.props.curentPage}\n                      unfallow= {this.props.unfallow}\n                      fallow = {this.props.fallow}\n                      users={this.props.users}\n                      togglefollowingInProgress={this.props.togglefollowingInProgress}\n                      followingInProgress = {this.props.followingInProgress }\n        />\n        </>\n    }\n};\nlet mapStateToProps = (state) => {\n    return {\n        users: userSelect(state),\n        pageSize: pageSizeSelect(state),\n        totalUsersCount: totalUsersCountSelect(state),\n        curentPage: curentPageSelect(state),\n        isFetcing:isFetcingSelect(state),\n        followingInProgress: followingInProgresSelect(state),\n\n    }\n};\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        fallow: (userID) => {\n            dispatch(fallowAC(userID));\n        },\n        unfallow: (userID) => {\n            dispatch(unfallowAC(userID));\n        },\n        setuser: (users) => {\n            dispatch(set_user(users));\n        },\n        setTotalCount:(TotalCount) =>{\n            dispatch(set_TotalCountAC(TotalCount));\n        },\n        SetCurrentPage: (p) =>{\n            dispatch(set_curentPageAC(p));\n        },\n        toggleisFetcing: (isFetcing) =>{\n            dispatch(setisFetcingAC(isFetcing));\n        }\n    }\n};*/\nexport default connect(mapStateToProps,\n    {fallow, unfallow, SetCurrentPage,togglefollowingInProgress, getUsersC\n})(UsersCont);\n"]},"metadata":{},"sourceType":"module"}