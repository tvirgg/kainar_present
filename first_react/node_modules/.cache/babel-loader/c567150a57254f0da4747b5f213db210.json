{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\my app\\\\src\\\\components\\\\users\\\\Paginator.jsx\";\nimport classes from \"./Users.module.css\";\nimport React, { useState } from \"react\";\n\nconst Pagination = (curentPage, onPageChanged, totalItemsCount, pageSize, portonsize = 10) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= 20; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [styles.selectedPage]: currentPage === p\n      }, styles.pageNumber),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/components/users/Paginator.jsx"],"names":["classes","React","useState","Pagination","curentPage","onPageChanged","totalItemsCount","pageSize","portonsize","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","filter","p","map","cn","selectedPage","currentPage","pageNumber","e"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,eAA5B,EAA6CC,QAA7C,EAAuDC,UAAU,GAAG,EAApE,KAA0E;AACzF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUL,eAAe,GAAGC,QAA5B,CAAjB;AACA,MAAIK,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGO,WAAvB,CAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBD,WAAtB,GAAoC,CAAhE;AACA,MAAII,sBAAsB,GAAGH,aAAa,GAAGD,WAA7C;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEK,MAAM,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDL,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFL,KAAK,CACDW,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAEJ,sBADjD,EAEIK,GAFJ,CAESD,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAGE,EAAE,CAAC;AACxB,SAACL,MAAM,CAACM,YAAR,GAAuBC,WAAW,KAAKJ;AADf,OAAD,EAExBH,MAAM,CAACQ,UAFiB,CAApB;AAGM,MAAA,GAAG,EAAEL,CAHX;AAIM,MAAA,OAAO,EAAGM,CAAD,IAAO;AACZzB,QAAAA,aAAa,CAACmB,CAAD,CAAb;AACH,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUA,CANV,CAAP;AAOH,GAVJ,CAJE,EAeDT,YAAY,GAAGE,aAAf,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBG,CAAP;AAkBH,CA5BD;;AA6BA,eAAed,UAAf","sourcesContent":["import classes from \"./Users.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Pagination = (curentPage, onPageChanged, totalItemsCount, pageSize, portonsize = 10) =>{\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}