{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tvirg\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\my app\\\\src\\\\components\\\\users\\\\Paginator.jsx\";\nimport classes from \"./Users.module.css\";\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\n\nconst Pagination = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  //get props\n  let pagesCount = Math.ceil(totalItemsCount / pageSize); //init new variable\n\n  let pages = [];\n\n  for (let i = 1; i <= totalItemsCount; i++) {\n    pages.push(i); //filling our array, which exist quantity elements in Paginator\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize); //number of portion from server\n\n  let [portionNumber, setPortionNumber] = useState(1); //variable for number of  ten\n\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1; // left border\n\n  console.log(currentPage);\n  let rightPortionPageNumber = portionNumber * portionSize; //right border\n\n  const classwork = (p, currentPage) => {\n    if (p === currentPage) {\n      return classes.selectedPage;\n    } else {\n      return classes.pageNumber;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classwork(p, currentPage),\n      key: p,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/components/users/Paginator.jsx"],"names":["classes","React","useState","cn","Pagination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","console","log","rightPortionPageNumber","classwork","p","selectedPage","pageNumber","paginator","filter","map","e"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;;AACA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,aAAzC;AAAwDC,EAAAA,WAAW,GAAG;AAAtE,CAAD,KAA8E;AAAE;AAC/F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB,CAD6F,CACtC;;AACvD,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIT,eAArB,EAAsCS,CAAC,EAAvC,EAA2C;AACvCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX,EADuC,CACzB;AACjB;;AACD,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB,CAN6F,CAMtC;;AACvD,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD,CAP6F,CAOzC;;AACpD,MAAIiB,qBAAqB,GAAI,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAvB,GAAsC,CAAlE,CAR6F,CAQxB;;AACrEW,EAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACA,MAAIe,sBAAsB,GAAGL,aAAa,GAAGR,WAA7C,CAV6F,CAUpC;;AACzD,QAAMc,SAAS,GAAG,CAACC,CAAD,EAAIjB,WAAJ,KAAmB;AACjC,QAAGiB,CAAC,KAAKjB,WAAT,EAAqB;AACjB,aAAOP,OAAO,CAACyB,YAAf;AACH,KAFD,MAGK;AACD,aAAOzB,OAAO,CAAC0B,UAAf;AACH;AACJ,GAPD;;AAQA,sBAAO;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDV,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFJ,KAAK,CAACe,MAAN,CAAaJ,CAAC,IAAIA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAEF,sBAAnD,EACIO,GADJ,CACSL,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAED,SAAS,CAACC,CAAD,EAAIjB,WAAJ,CAA1B;AACM,MAAA,GAAG,EAAEiB,CADX;AAEM,MAAA,OAAO,EAAGM,CAAD,IAAO;AACZtB,QAAAA,aAAa,CAACgB,CAAD,CAAb;AACH,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIUA,CAJV,CAAP;AAKH,GAPJ,CAJE,EAYFR,YAAY,GAAGC,aAAf,iBACD;AAAQ,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbG,CAAP;AAeH,CAlCD;;AAmCA,eAAeb,UAAf","sourcesContent":["import classes from \"./Users.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\";\r\nconst Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) =>{ //get props\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);//init new variable\r\n    let pages = [];\r\n    for (let i = 1; i <= totalItemsCount; i++) {\r\n        pages.push(i);//filling our array, which exist quantity elements in Paginator\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);//number of portion from server\r\n    let [portionNumber, setPortionNumber] = useState(1);//variable for number of  ten\r\n    let leftPortionPageNumber = ((portionNumber - 1) * portionSize) + 1; // left border\r\n    console.log(currentPage)\r\n    let rightPortionPageNumber = portionNumber * portionSize;//right border\r\n    const classwork = (p, currentPage) =>{\r\n        if(p === currentPage){\r\n            return classes.selectedPage;\r\n        }\r\n        else {\r\n            return classes.pageNumber;\r\n        }\r\n    }\r\n    return <div className={classes.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={classwork(p, currentPage)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}