{"ast":null,"code":"import PostsDataReducer from './../PostsData-reducer';\nimport DialogsDataReducer from './../DialogsData_reducer';\nlet store = {\n  _state: {\n    DialogsData: {\n      Dialogs: [{\n        id: 1,\n        name: 'Artem'\n      }, {\n        id: 2,\n        name: 'Artem2'\n      }, {\n        id: 3,\n        name: 'Artem3'\n      }, {\n        id: 4,\n        name: 'Artem4'\n      }],\n      Messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How is your it-kamasutra?'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }],\n      newMessageBody: ''\n    },\n    PostsData: {\n      Posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }, {\n        id: 3,\n        message: 'Blabla',\n        likesCount: 11\n      }, {\n        id: 4,\n        message: 'Dada',\n        likesCount: 11\n      }],\n      newPostText: ''\n    }\n  },\n\n  dispatch(action) {\n    this._state.PostsData = PostsDataReducer(this._state.PostsData, action);\n    this._state.DialogsData = DialogsDataReducer(this._state.DialogsData, action);\n\n    this._RenderFunc(this._state);\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _RenderFunc() {},\n\n  subscrybe(observer) {\n    this._RenderFunc = observer;\n  }\n\n};\nexport const SendMessagecreator = text => {\n  return {\n    type: 'SendMessage',\n    body: text\n  };\n};\nexport const UpdateNewMassegeBodycreator = text => {\n  return {\n    type: 'UpdateNewMassegeBody',\n    body: text\n  };\n};\nexport const addPostcreator = text => {\n  return {\n    type: 'AddPost',\n    postMassage: text\n  };\n};\nexport const OnPostchangecreator = text => {\n  return {\n    type: 'UpdatePost',\n    Newtext: text\n  };\n};\nexport default store;","map":{"version":3,"sources":["D:/copy/react__pr/fitst-one/my-app/src/redux/state/state.js"],"names":["PostsDataReducer","DialogsDataReducer","store","_state","DialogsData","Dialogs","id","name","Messages","message","newMessageBody","PostsData","Posts","likesCount","newPostText","dispatch","action","_RenderFunc","getState","subscrybe","observer","SendMessagecreator","text","type","body","UpdateNewMassegeBodycreator","addPostcreator","postMassage","OnPostchangecreator","Newtext"],"mappings":"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","sourcesContent":["import PostsDataReducer from './../PostsData-reducer';\r\nimport DialogsDataReducer from './../DialogsData_reducer';\r\nlet store = {\r\n  _state:{\r\n    DialogsData: {\r\n        Dialogs:\r\n        [\r\n          {id: 1, name: 'Artem'},\r\n          {id: 2, name: 'Artem2'},\r\n          {id: 3, name: 'Artem3'},\r\n          {id: 4, name: 'Artem4'}\r\n        ],\r\n        Messages: [\r\n          {id: 1, message: 'Hi'},\r\n          {id: 2, message: 'How is your it-kamasutra?'},\r\n          {id: 3, message: 'Yo'},\r\n          {id: 4, message: 'Yo'},\r\n          {id: 5, message: 'Yo'}\r\n      ],\r\n      newMessageBody : '' \r\n    },\r\n      PostsData: {\r\n        Posts: [\r\n          {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n          {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n          {id: 3, message: 'Blabla', likesCount: 11},\r\n          {id: 4, message: 'Dada', likesCount: 11} \r\n        ],\r\n          newPostText : '' \r\n        }\r\n},\r\n\r\ndispatch(action){\r\n  this._state.PostsData = PostsDataReducer(this._state.PostsData, action);\r\n  this._state.DialogsData = DialogsDataReducer(this._state.DialogsData, action);\r\n  this._RenderFunc(this._state);\r\n},\r\ngetState(){\r\n  return this._state;\r\n},\r\n_RenderFunc(){\r\n},\r\nsubscrybe(observer){\r\n  this._RenderFunc = observer;\r\n}\r\n}\r\n\r\nexport const SendMessagecreator = (text) =>{\r\n  return{\r\n      type: 'SendMessage', body: text\r\n  }\r\n}\r\nexport const UpdateNewMassegeBodycreator = (text) =>{\r\n  return{\r\n      type: 'UpdateNewMassegeBody', body: text\r\n  }\r\n}\r\nexport const addPostcreator = (text) =>{\r\n  return{\r\n      type: 'AddPost', postMassage: text\r\n  }\r\n}\r\n\r\nexport const OnPostchangecreator = (text) =>{\r\n  return{\r\n      type: 'UpdatePost', Newtext: text\r\n  }\r\n}\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}