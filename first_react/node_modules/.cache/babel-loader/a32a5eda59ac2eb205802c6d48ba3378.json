{"ast":null,"code":"import { UserAPI } from \"../../components/users/Api\";\nlet initialstate = {\n  Posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  newPostText: '',\n  profile: null,\n  status: ''\n};\n\nconst PostsDataReducer = (state = initialstate, action) => {\n  if (action.type === 'AddPost') {\n    let newPost = {\n      id: 5,\n      message: action.postMassage,\n      likesCount: 0\n    };\n    return { ...state,\n      Posts: [...state.Posts, newPost]\n    };\n  } else if (action.type === 'setProfile') {\n    return { ...state,\n      profile: action.profile\n    };\n  } else if (action.type === 'Get_status') {\n    return { ...state,\n      status: action.status\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const setProfilePage = userId => async dispatch => {\n  let response = UserAPI.getProfile(userId);\n  dispatch(setProfile(response.data));\n};\nexport const setStatus = status => {\n  return {\n    type: 'Get_status',\n    status\n  };\n};\nexport const getStatus = userId => async dispatch => {\n  let response = UserAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = UserAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const addPostcreator = text => {\n  return {\n    type: 'AddPost',\n    postMassage: text\n  };\n};\nexport const setProfile = profile => ({\n  type: 'setProfile',\n  profile\n});\nexport const OnPostchangecreator = text => {\n  return {\n    type: 'UpdatePost',\n    Newtext: text\n  };\n};\nexport default PostsDataReducer;","map":{"version":3,"sources":["C:/Users/tvirg/OneDrive/Рабочий стол/my app/src/redux/state/PostsData-reducer.js"],"names":["UserAPI","initialstate","Posts","id","message","likesCount","newPostText","profile","status","PostsDataReducer","state","action","type","newPost","postMassage","setProfilePage","userId","dispatch","response","getProfile","setProfile","data","setStatus","getStatus","updateStatus","resultCode","addPostcreator","text","OnPostchangecreator","Newtext"],"mappings":"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","sourcesContent":["import {UserAPI} from \"../../components/users/Api\";\n\n\nlet initialstate = {\n  Posts: [\n      {id: 1, message: 'Hi, how are you?', likesCount: 12},\n      {id: 2, message: 'It\\'s my first post', likesCount: 11},\n      {id: 3, message: 'Blabla', likesCount: 11},\n      {id: 4, message: 'Dada', likesCount: 11} \n    ],\n  newPostText : '',\n  profile: null,\n    status: ''\n}\nconst PostsDataReducer = (state = initialstate, action) =>{\n\nif (action.type === 'AddPost'){\n        let newPost = {\n          id: 5,\n          message: action.postMassage,\n          likesCount: 0\n        };\n\n        return{\n          ...state,\n          Posts: [...state.Posts, newPost]\n        };\n      }\n    else if (action.type === 'setProfile'){\n      return{\n        ...state,\n        profile: action.profile\n      }\n    }\n    else if (action.type === 'Get_status'){\n        return{\n            ...state,\n            status: action.status\n        }\n    }\n      else {\n        return state;\n      }\n}\nexport const setProfilePage =(userId)=> async (dispatch) => {\n    let response = UserAPI.getProfile(userId);\n            dispatch(setProfile(response.data));\n}\n\n\n\nexport const setStatus = (status) => { return {type: 'Get_status', status}}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = UserAPI.getStatus(userId);\n            dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = UserAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\n\n\n\n\nexport const addPostcreator = (text) =>{\n  return{\n      type: 'AddPost', postMassage: text\n  }\n}\nexport const setProfile= (profile) =>({\n    type: 'setProfile', profile})\n\nexport const OnPostchangecreator = (text) =>{\n  return{\n      type: 'UpdatePost', Newtext: text\n  }\n}\nexport default PostsDataReducer;\n"]},"metadata":{},"sourceType":"module"}